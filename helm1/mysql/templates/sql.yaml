---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: teststorage2
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sqlserver-pvc2
spec:
  storageClassName: teststorage2
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlserver-deployment2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sqlserver
  template:
    metadata:
      labels:
        app: sqlserver
    spec:
      containers:
        - name: sqlserver-container2
          image: prashantshivach/sqlserver:latest
          ports:
            - containerPort: 3306
          # env:
          #   - name: MYSQL_ROOT_PASSWORD
          #     value: cockpitpro
          #   - name: MYSQL_DATABASE
          #     value: mytestdb
          #   - name: MYSQL_USER
          #     value: test
          #   - name: MYSQL_PASSWORD
          #     value: Prashant@123
          volumeMounts:
            - name: my-pv2
              mountPath: /var/lib/mysql/
      volumes:
        - name: my-pv2
          persistentVolumeClaim:
            claimName: sqlserver-pvc2

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-pv2
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: teststorage2
  hostPath:
    path: /tmp/data2


---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: sqlserver
  ports:
   - protocol: TCP
     port: 3306
     targetPort: 3306
